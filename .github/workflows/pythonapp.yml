# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

# name: Python application

# on:
#   push:
#     branches: [ master ]
#   pull_request:
#     branches: [ master ]

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v2
#     - name: Set up Python 3.8
#       uses: actions/setup-python@v1
#       with:
#         python-version: 3.8
#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install flake8 pytest
#         if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#     - name: Lint with flake8
#       run: |
#         # stop the build if there are Python syntax errors or undefined names
#         flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#         # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#         flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#     - name: Do unittest
#       run: |
#         python -m unittest


# on: [pull_request]

# jobs:
#   lint:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - uses: grantmcconnaughey/lintly-flake8-github-action@v1.0
#         with:
#           # The GitHub API token to create reviews with
#           token: ${{ secrets.GITHUB_TOKEN }}
#           # Fail if "new" violations detected or "any", default "new"
#           failIf: new
#           # Additional arguments to pass to flake8, default "." (current directory)
#           args: "--ignore=E121,E123 ."

name: Control

on: [pull_request]

jobs:
  lint1:
    name: Lint using flake-8 no PR
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  # lint:
  #   name: Lint using flake-8
  #   runs-on: ubuntu-18.04
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Lint with flake8
  #       uses: grantmcconnaughey/lintly-flake8-github-action@v1.0
  #       with:
  #         # The GitHub API token to create reviews with
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #         # Fail if "new" violations detected or "any", default "new"
  #         failIf: new
  #         args: ""
  test:
    name: Run unit test
    needs: lint
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi  
      - name: run unit test
        run: |
          python -m unittest
